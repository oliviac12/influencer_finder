-- Supabase Email Draft Cache Table
-- Migration to create persistent storage for email drafts

-- Drop table if exists (for development only)
-- DROP TABLE IF EXISTS email_draft_cache;

-- Create the email_draft_cache table
CREATE TABLE email_draft_cache (
    -- Primary key
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    
    -- Composite cache key fields
    username TEXT NOT NULL,
    campaign TEXT NOT NULL,
    
    -- Email content
    subject TEXT,
    body TEXT,
    email TEXT,
    personalization TEXT,
    
    -- Metadata
    generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    edited_at TIMESTAMP WITH TIME ZONE,
    version INTEGER DEFAULT 1,
    
    -- Additional tracking fields
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- Ensure unique combination of username + campaign
    CONSTRAINT unique_username_campaign UNIQUE (username, campaign)
);

-- Create indexes for performance
CREATE INDEX idx_email_draft_cache_campaign ON email_draft_cache (campaign);
CREATE INDEX idx_email_draft_cache_username ON email_draft_cache (username);
CREATE INDEX idx_email_draft_cache_generated_at ON email_draft_cache (generated_at);

-- Create a function to update the updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger to automatically update updated_at
CREATE TRIGGER update_email_draft_cache_updated_at
    BEFORE UPDATE ON email_draft_cache
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Enable Row Level Security (RLS)
ALTER TABLE email_draft_cache ENABLE ROW LEVEL SECURITY;

-- Create policy to allow all operations for authenticated users
-- (You may want to restrict this further based on your auth setup)
CREATE POLICY "Allow all operations for authenticated users" ON email_draft_cache
    FOR ALL USING (auth.role() = 'authenticated');

-- Insert comment for documentation
COMMENT ON TABLE email_draft_cache IS 'Persistent cache for AI-generated email drafts to avoid redundant LLM API calls';
COMMENT ON COLUMN email_draft_cache.username IS 'TikTok creator username';
COMMENT ON COLUMN email_draft_cache.campaign IS 'Campaign identifier (e.g. wonder_fall2025)';
COMMENT ON COLUMN email_draft_cache.subject IS 'Generated email subject line';
COMMENT ON COLUMN email_draft_cache.body IS 'Generated email body content';
COMMENT ON COLUMN email_draft_cache.email IS 'Creator email address';
COMMENT ON COLUMN email_draft_cache.personalization IS 'AI-extracted personalization snippet';
COMMENT ON COLUMN email_draft_cache.generated_at IS 'When the draft was first generated by LLM';
COMMENT ON COLUMN email_draft_cache.edited_at IS 'When the draft was last manually edited';
COMMENT ON COLUMN email_draft_cache.version IS 'Schema version for future migrations';